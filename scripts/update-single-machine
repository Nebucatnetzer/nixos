#!/usr/bin/env -S nix shell .#pkgs.python3 --command python
# -*- mode: python -*-
# Be awayre this code was mainly generated by an LLM!

import argparse
import logging
import os
import subprocess
from pathlib import Path


def main() -> None:
    logger = logging.getLogger(__name__)
    logger.setLevel(logging.INFO)

    rsa_key: str = Path("~/.nixos/secrets/ssh_keys/ansible/ansible.key").expanduser()
    os.environ["NIX_SSHOPTS"] = f"-i {rsa_key}"

    parser: argparse.ArgumentParser = argparse.ArgumentParser(
        description="Remote NixOS deployment tool",
    )
    parser.add_argument("host", help="Target hostname")
    parser.add_argument(
        "-r",
        "--reboot",
        action="store_true",
        help="Reboot the host after boot deployment",
    )
    args: argparse.Namespace = parser.parse_args()

    host: str = args.host
    fqdn: str = f"{host}.2li.local"

    if args.reboot:
        logger.info("%s with reboot", fqdn)
        subprocess.run(
            [
                "nixos-rebuild-ng",
                "boot",
                "-j",
                "auto",
                "--sudo",
                "--target-host",
                fqdn,
                "--flake",
                f".#{host}",
            ],
            check=True,
        )
        subprocess.run(["ssh", "-i", rsa_key, fqdn, "sudo reboot"], check=True)
    else:
        logger.info("%s", fqdn)
        subprocess.run(
            [
                "nixos-rebuild-ng",
                "switch",
                "-j",
                "auto",
                "--sudo",
                "--target-host",
                fqdn,
                "--flake",
                f".#{host}",
            ],
            check=True,
        )


if __name__ == "__main__":
    main()
