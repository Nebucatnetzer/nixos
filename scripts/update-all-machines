# -*- mode: python -*-
#!/usr/bin/env -S nix shell .#pkgs.python3 --command python
# Be awayre this code was mainly generated by an LLM!

import argparse
import os
import shlex
import subprocess
from typing import List


def get_nixos_hosts() -> List[str]:
    """Retrieve list of nixosConfigurations hosts from nix flakes."""
    cmd = "nix eval .#nixosConfigurations --apply 'pkgs: builtins.concatStringsSep \" \" (builtins.attrNames pkgs)'"
    result = subprocess.run(
        shlex.split(cmd),
        stdout=subprocess.PIPE,
        text=True,
        cwd="/home/andreas/.nixos",
        check=True,
    )
    return result.stdout.strip().strip('"').split()


def run_rebuild(host: str, fqdn: str, reboot: bool, rsa_key: str) -> None:
    """Perform nixos-rebuild-ng for the given host."""
    if reboot:
        if (
            subprocess.run(["hostname"], capture_output=True, text=True, check=False).stdout.strip()
            == host
        ):
            print("Skip management")
            return
        if host == "management":
            print("Skip cache\n")
            return

        cmd = [
            "nixos-rebuild-ng",
            "boot",
            "-j",
            "auto",
            "--sudo",
            "--target-host",
            fqdn,
            "--flake",
            f".#{host}",
        ]
        print(f"build {host}")
        subprocess.run(cmd, check=True)

        subprocess.run(["ssh", "-i", rsa_key, fqdn, "sudo reboot"], check=True)
    else:
        print(fqdn)
        cmd = [
            "nixos-rebuild-ng",
            "switch",
            "-j",
            "auto",
            "--sudo",
            "--target-host",
            fqdn,
            "--flake",
            f".#{host}",
        ]
        subprocess.run(cmd, check=True)
        print("\n")


def main() -> None:
    parser = argparse.ArgumentParser(description="NixOS rebuild orchestrator")
    parser.add_argument("-r", action="store_true", help="Reboot after build")
    args = parser.parse_args()

    skip_hosts: List[str] = [
        "desktop-vm",
        "capricorn",
        "gwyn",
        "loki-test",
        "mobile",
        "staubfinger",
        "test-raspi",
    ]

    rsa_key: str = os.path.expanduser("~/.nixos/secrets/ssh_keys/ansible/ansible.key")
    os.environ["NIX_SSHOPTS"] = f"-i {rsa_key}"

    hosts: List[str] = get_nixos_hosts()

    for host in hosts:
        if host in skip_hosts:
            continue
        fqdn: str = f"{host}.2li.local"
        run_rebuild(host, fqdn, args.r, rsa_key)

    if args.r:
        # rebuild and restart the management server at the end
        host = "management"
        fqdn = f"{host}.2li.local"
        print(f"build {host}")
        cmd = [
            "nixos-rebuild-ng",
            "boot",
            "-j",
            "auto",
            "--sudo",
            "--target-host",
            fqdn,
            "--flake",
            f".#{host}",
        ]
        subprocess.run(cmd, check=True)
        subprocess.run(["ssh", "-i", rsa_key, fqdn, "sudo reboot"], check=True)


if __name__ == "__main__":
    main()
