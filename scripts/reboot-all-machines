# -*- mode: python -*-
#!/usr/bin/env -S nix shell .#pkgs.python3 --command python
# Be awayre this code was mainly generated by an LLM!
import os
import subprocess
from typing import List


def get_nixos_hosts() -> List[str]:
    """Retrieve list of NixOS configuration hostnames."""
    cmd: List[str] = [
        "nix",
        "eval",
        ".#nixosConfigurations",
        "--apply",
        'pkgs: builtins.concatStringsSep " " (builtins.attrNames pkgs)',
    ]
    result = subprocess.run(cmd, check=True, stdout=subprocess.PIPE, text=True)
    return result.stdout.strip().strip('"').split()


def reboot_hosts(hosts: List[str], skip_list: List[str], rsa_key: str) -> None:
    """Reboot hosts via SSH, skipping specified ones."""
    for host in hosts:
        if host in skip_list:
            continue
        fqdn: str = f"{host}.2li.local"
        print(fqdn)
        ssh_cmd: List[str] = ["ssh", "-i", rsa_key, fqdn, "sudo reboot"]
        subprocess.run(ssh_cmd)
        print()
        print()


def main() -> None:
    os.chdir("/home/andreas/.nixos")

    skip: List[str] = [
        "desktop-vm",
        "gwyn",
        "loki-test",
        "mobile",
        "staubfinger",
        "test-raspi",
    ]

    rsa_key: str = os.path.expanduser("~/.nixos/secrets/ssh_keys/ansible/ansible.key")
    os.environ["NIX_SSHOPTS"] = f"-i {rsa_key}"

    hosts: List[str] = get_nixos_hosts()
    reboot_hosts(hosts, skip, rsa_key)


if __name__ == "__main__":
    main()
